{"version":3,"sources":["firebase/index.js","components/PageLoading.jsx","context/authContext.js","context/context.js","context/chatContext.js","context/forumContext.js","components/Navbar.jsx","components/Footer.jsx","pages/Home.jsx","pages/Error.jsx","pages/Profile.jsx","pages/auth/Login.jsx","pages/auth/SignUp.jsx","constants/index.js","pages/auth/ForgotPassword.jsx","components/portfolio/Skills.jsx","components/portfolio/Hero.jsx","pages/Portfolio.jsx","routes/PrivateRoute.js","pages/ChatRoom.jsx","components/MarkdownPost.jsx","pages/forum/PostList.jsx","pages/forum/CreatePost.jsx","pages/forum/SinglePost.jsx","App.js","index.js"],"names":["firebaseConfig","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","storage","timestamp","FieldValue","serverTimestamp","auth","PageLoading","id","className","AuthContext","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","isLoading","setIsLoading","useEffect","collection","doc","email","update","online","onAuthStateChanged","user","values","signup","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","lastLoggedIn","finally","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","value","PortfolioContext","PortfolioProvider","useContext","users","setUsers","message","setMessage","setUser","progress","setProgress","loading","setLoading","onSnapshot","snapshot","_users","docs","filter","_doc","data","username","map","docId","exists","updateUserProfile","info","_docRef","where","get","then","_result","length","file","includes","type","stgRef","ref","uid","put","on","snap","_percentage","bytesTransferred","totalBytes","err","getDownloadURL","url","photoURL","bio","address","birthDate","setTimeout","isUserExists","updateSkill","skills","updateExperience","_experience","experience","addProject","_projectObj","_projects","projectImage","name","projects","removeProject","changeUserBackground","bgImage","ChatContext","ChatProvider","messages","setMessages","notifications","setNotifications","selectedUser","setSelectedUser","notify","to","orderBy","_messages","roomName","startConversation","usersColRef","from","chatRoomName","_message","createdAt","room","add","set","read","changeNotificationStatus","ForumContext","ForumProvider","posts","setPosts","_posts","createPost","_post","postImage","post","author","comments","window","location","postTitle","isPostExists","addComment","_comment","date","Date","now","_userComment","userEmail","comment","Navbar","history","useHistory","triggerNotification","Promise","allSettled","document","title","push","Notification","permission","options","body","icon","notification","onclick","requestPermission","p","console","log","catch","error","style","display","position","onClick","Footer","getFullYear","Home","_user","idx","isOnline","src","alt","language","Error","goBack","Profile","userInfo","setUserInfo","setLanguage","percentage","setPercentage","skillsList","setSkillsList","year","setYear","setTitle","company","setCompany","description","setDescription","expList","setExpList","projectTitle","setProjectTitle","projectUrl","setProjectUrl","setProjectImage","projectDescription","setProjectDescription","projectsList","setProjectsList","width","role","aria-valuenow","aria-valuemin","aria-valuemax","toFixed","onSubmit","e","preventDefault","trim","submitHandler","disabled","onChange","target","placeholder","files","submitSkillHandler","htmlFor","defaultValue","min","max","s","submitExperienceHandler","submitProjectHandler","_project","Login","setEmail","setPassword","setError","ex","event","required","SignUp","setUsername","confirmPassword","setConfirmPassword","ForgotPassword","Skills","Hero","backgroundImage","fontSize","hidden","href","rel","Portfolio","useParams","setExists","_exists","PrivateRoute","Component","component","rest","render","props","ChatRoom","down","useRef","current","scrollIntoView","behavior","maxHeight","minHeight","overflowY","scrollBehavior","find","moment","toDate","fromNow","autoFocus","components","code","node","inline","match","exec","dark","PreTag","String","replace","PostList","authorEmail","postText","CreatePost","setPost","rows","SinglePost","postId","setComment","submitCommentHandler","sort","a","b","App","docRef","vis","setIdleDuration","exact","path","NotFound","root","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.655a0081.chunk.js","sourcesContent":["import firebase from 'firebase'\nimport 'firebase/auth'\n\n// firebase config , (credentials in .env.local to protect your database)\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n}\n\nconst firebaseConfig = firebase.initializeApp(config)\nconst db = firebaseConfig.firestore()\nconst storage = firebase.storage()\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp\n\n// initialize auth\nconst auth = firebaseConfig.auth()\n\nexport { db, storage, timestamp, auth }\n","import React from 'react'\n\n// loading components\nconst PageLoading = () => {\n  return (\n    <div id='preloader'>\n      <div id='status'>\n        <div className='spinner'>\n          <div className='double-bounce1'></div>\n          <div className='double-bounce2'></div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default PageLoading\n","import React, { useState, useEffect, createContext } from 'react'\nimport { auth, db, timestamp } from '../firebase'\nimport PageLoading from '../components/PageLoading'\n\nconst AuthContext = createContext()\n\nconst AuthProvider = ({ children }) => {\n  // this is the auth scaffolding check\n  // discord to find the youtube video\n  // that explain this part step by step (good luck 😊)\n  const [currentUser, setCurrentUser] = useState(null)\n  const [isLoading, setIsLoading] = useState(true)\n\n  const signup = (email, password) => {\n    return auth.createUserWithEmailAndPassword(email, password)\n  }\n\n  const login = (email, password) => {\n    return auth.signInWithEmailAndPassword(email, password)\n  }\n\n  const logout = () => {\n    const docRef = db.collection('users').doc(currentUser.email)\n    return docRef\n      .update({\n        online: 'OFFLINE',\n        lastLoggedIn: timestamp(),\n      })\n      .finally(() => {\n        return auth.signOut()\n      })\n  }\n\n  const resetPassword = (email) => {\n    return auth.sendPasswordResetEmail(email)\n  }\n\n  const updateEmail = (email) => {\n    return currentUser.updateEmail(email)\n  }\n  const updatePassword = (password) => {\n    return currentUser.updatePassword(password)\n  }\n\n  useEffect(() => {\n    if (!currentUser) return\n\n    // change user's status to online when he log-in\n    const docRef = db.collection('users').doc(currentUser.email)\n    docRef.update({\n      online: 'ONLINE',\n      // lastLoggedIn: timestamp(),\n    })\n  }, [currentUser])\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      setCurrentUser(user)\n      setIsLoading(false)\n    })\n    return unsubscribe\n  }, [])\n\n  const values = {\n    currentUser,\n    signup,\n    login,\n    logout,\n    resetPassword,\n    updateEmail,\n    updatePassword,\n  }\n  return (\n    <AuthContext.Provider\n      value={values}\n      children={!isLoading ? children : <PageLoading />}\n    />\n  )\n}\nexport { AuthContext, AuthProvider }\n","import React, { useState, useEffect, createContext, useContext } from 'react'\nimport { db, storage } from '../firebase'\nimport { AuthContext } from './authContext'\n\nconst PortfolioContext = createContext()\n\nconst PortfolioProvider = ({ children }) => {\n  const { currentUser } = useContext(AuthContext)\n\n  const [users, setUsers] = useState([])\n  const [message, setMessage] = useState('')\n  const [user, setUser] = useState(null)\n  const [progress, setProgress] = useState(0)\n  const [loading, setLoading] = useState(false)\n\n  // this method is looking for a users by its username\n  // and returns his doc when its found\n  const isUserExists = (username) => {\n    return db.collection('users').where('username', '==', username).get()\n  }\n\n  const changeUserBackground = (file) => {\n    // if no user is logged in return\n    // (don't execute the other code)\n    if (!currentUser) return\n    setLoading(true)\n    const _docRef = db.collection('users').doc(currentUser.email)\n    // upload/update image url only\n    const types = ['image/png', 'image/jpeg']\n\n    if (file && types.includes(file.type)) {\n      const stgRef = storage.ref('images' + file.name + currentUser.uid)\n      stgRef.put(file).on(\n        'state_changed',\n        (snap) => {\n          // uploading\n          const _percentage = (snap.bytesTransferred / snap.totalBytes) * 100\n          setProgress(_percentage)\n        },\n        (err) => setLoading(false),\n        () => {\n          // on finish upload\n          stgRef.getDownloadURL().then((url) => {\n            _docRef\n              .update({\n                bgImage: url,\n              })\n              .then(() => setLoading(false))\n              .finally(() => setProgress(0))\n          })\n        }\n      )\n    }\n  }\n\n  // this is the main function for updating user profile\n  const updateUserProfile = (info) => {\n    // if no user is logged in return\n    // (don't execute the other code)\n    if (!currentUser) return\n\n    setLoading(true)\n    // change username if not exists in users collection\n    let exists = false\n    const _docRef = db.collection('users').doc(currentUser.email)\n    db.collection('users')\n      .where('username', '==', info.username)\n      .get()\n      .then((_result) => {\n        const data = _result.docs.map((_doc) => {\n          return {\n            docId: _doc.id,\n            ..._doc.data(),\n          }\n        })\n        exists = data.length > 0 ? true : false\n        if (!exists) {\n          _docRef\n            .update({\n              username: info.username,\n            })\n            .finally(() => setLoading(false))\n          setMessage('user was updated successfully')\n        }\n      })\n    //END: update username\n\n    // upload/update image url only\n    const { file } = info\n    const types = ['image/png', 'image/jpeg']\n\n    if (file && types.includes(file.type)) {\n      const stgRef = storage.ref(currentUser.uid)\n      stgRef.put(file).on(\n        'state_changed',\n        (snap) => {\n          // uploading\n          const _percentage = (snap.bytesTransferred / snap.totalBytes) * 100\n          setProgress(_percentage)\n        },\n        (err) => setLoading(false),\n        () => {\n          // on finish upload\n          stgRef.getDownloadURL().then((url) => {\n            _docRef\n              .update({\n                photoURL: url,\n              })\n              .then(() => setLoading(false))\n              .finally(() => {\n                setMessage('user profile image was updated successfully')\n                setProgress(0)\n              })\n          })\n        }\n      )\n    }\n\n    _docRef\n      .update({\n        bio: info.bio,\n        address: info.address,\n        birthDate: info.birthDate,\n      })\n      .then(() => setLoading(false))\n      .finally(() => {\n        setMessage('user profile info was updated successfully')\n      })\n\n    setTimeout(() => {\n      setMessage(null)\n    }, 2500)\n  }\n\n  const updateSkill = (skills) => {\n    setLoading(true)\n    const _docRef = db.collection('users').doc(currentUser.email)\n    _docRef\n      .update({\n        skills: skills,\n      })\n      .finally(() => setLoading(false))\n  }\n\n  const updateExperience = (_experience) => {\n    setLoading(true)\n    const _docRef = db.collection('users').doc(currentUser.email)\n    _docRef\n      .update({\n        experience: _experience,\n      })\n      .finally(() => setLoading(false))\n  }\n\n  // adding projects to firestore / storage\n  const addProject = (_projectObj, _projects) => {\n    setLoading(true)\n    const _docRef = db.collection('users').doc(currentUser.email)\n\n    // upload/update image url only\n    const { projectImage } = _projectObj\n    const types = ['image/png', 'image/jpeg']\n\n    if (projectImage && types.includes(projectImage.type)) {\n      const stgRef = storage.ref(projectImage.name + currentUser.uid)\n      stgRef.put(projectImage).on(\n        'state_changed',\n        (snap) => {\n          // uploading\n          const _percentage = (snap.bytesTransferred / snap.totalBytes) * 100\n          setProgress(_percentage)\n        },\n        (err) => setLoading(false),\n        () => {\n          // on finish upload\n          stgRef.getDownloadURL().then((url) => {\n            _docRef\n              .update({\n                projects: [\n                  ..._projects,\n                  {\n                    ..._projectObj,\n                    projectImage: url, // from file to string\n                  },\n                ],\n              })\n              .then(() => setLoading(false))\n              .finally(() => {\n                setMessage('user profile image was updated successfully')\n                setProgress(0)\n              })\n          })\n        }\n      )\n    }\n  }\n\n  // remove project from fire store\n  const removeProject = (_projects) => {\n    setLoading(true)\n    const _docRef = db.collection('users').doc(currentUser.email)\n    _docRef\n      .update({\n        projects: _projects,\n      })\n      .then(() => setLoading(false))\n  }\n\n  useEffect(() => {\n    // getting users only if they have a username\n    const unsubscribe = db.collection('users').onSnapshot((snapshot) => {\n      const _users = snapshot.docs\n        .filter((_doc) => (_doc.data().username !== '' ? true : false))\n        .map((_doc) => {\n          return {\n            docId: _doc.id,\n            ..._doc.data(),\n          }\n        })\n\n      setUsers(_users)\n    })\n    return unsubscribe\n  }, [])\n\n  useEffect(() => {\n    if (!currentUser) return\n\n    // getting the current logged-in user his info (username, bio, age, ...)\n    const _docRef = db.collection('users').doc(currentUser.email)\n\n    const unsubscribe = _docRef.onSnapshot((_doc) => {\n      if (_doc.exists) {\n        setUser({\n          docId: _doc.id,\n          ..._doc.data(),\n        })\n      }\n    })\n\n    return unsubscribe\n  }, [currentUser])\n\n  const values = {\n    updateUserProfile,\n    users,\n    isUserExists,\n    message,\n    user,\n    progress,\n    updateSkill,\n    updateExperience,\n    addProject,\n    removeProject,\n    changeUserBackground,\n    loading,\n    setLoading,\n  }\n\n  return <PortfolioContext.Provider value={values} children={children} />\n}\n\nexport { PortfolioContext, PortfolioProvider }\n","import React, { useState, useEffect, createContext, useContext } from 'react'\nimport { db, timestamp } from '../firebase'\nimport { AuthContext } from './authContext'\nimport { PortfolioContext } from './context'\n\nconst ChatContext = createContext()\n\nconst ChatProvider = ({ children }) => {\n  const { currentUser } = useContext(AuthContext)\n  const { user } = useContext(PortfolioContext)\n  const [messages, setMessages] = useState([])\n  const [notifications, setNotifications] = useState(null)\n  const [selectedUser, setSelectedUser] = useState({})\n  // this is pretty complicated logic to make a comment on 🙄\n\n  // function that starts a conversation with another user\n  const startConversation = (message) => {\n    if (!currentUser && !user) return\n    if (!selectedUser) return\n\n    // here i basicity make a link between the sender and receiver of the message\n    // by creating a room\n    const usersColRef = db.collection('users')\n    const to = usersColRef.doc(selectedUser.email)\n    const from = usersColRef.doc(currentUser.email)\n    const chatRoomName = selectedUser.email + ' ' + currentUser.email\n\n    const _message = {\n      uid: currentUser.uid,\n      email: currentUser.email,\n      username: user.username,\n      photoURL: user.photoURL,\n      roomName: chatRoomName,\n      message: message,\n      createdAt: timestamp(),\n    }\n\n    from\n      .update({\n        room: chatRoomName,\n      })\n      .then(() => {\n        to.update({\n          room: chatRoomName,\n        }).then(() => {\n          db.collection('messages')\n            .add(_message)\n            .finally(() => {\n              db.collection('notifications').doc(selectedUser.email).set({\n                read: false,\n                from: _message,\n              })\n            })\n        })\n      })\n  }\n\n  // change notification status in db\n  const changeNotificationStatus = () => {\n    db.collection('notifications').doc(currentUser.email).update({\n      read: true,\n      from: null,\n    })\n  }\n\n  // listening to notification in db\n  useEffect(() => {\n    if (!currentUser) return\n\n    const unsubscribe = db\n      .collection('notifications')\n      .doc(currentUser.email)\n      .onSnapshot((_doc) => {\n        if (_doc.exists) {\n          const notify = { to: _doc.id, ..._doc.data() }\n          setNotifications(notify)\n        }\n      })\n\n    return unsubscribe\n  }, [currentUser])\n\n  useEffect(() => {\n    if (!currentUser) return\n    if (!selectedUser) return\n\n    const unsubscribe = db\n      .collection('messages')\n      .orderBy('createdAt')\n      .onSnapshot((snapshot) => {\n        const _messages = snapshot.docs\n          .filter((_doc) => {\n            return (\n              _doc.data().roomName.includes(currentUser.email) &&\n              _doc.data().roomName.includes(selectedUser.email)\n            )\n          })\n          .map((_doc) => {\n            return {\n              docId: _doc.id,\n              ..._doc.data(),\n            }\n          })\n\n        setMessages(_messages)\n      })\n\n    return unsubscribe\n  }, [currentUser, selectedUser])\n\n  const values = {\n    startConversation,\n    messages,\n    setSelectedUser,\n    selectedUser,\n    setNotifications,\n    notifications,\n    changeNotificationStatus,\n  }\n\n  return <ChatContext.Provider value={values} children={children} />\n}\n\nexport { ChatContext, ChatProvider }\n","import React, { useState, useEffect, createContext, useContext } from 'react'\nimport { db, storage, timestamp } from '../firebase'\nimport { AuthContext } from './authContext'\nimport { PortfolioContext } from './context'\n\nconst ForumContext = createContext()\n\nconst ForumProvider = ({ children }) => {\n  // const history = useHistory()\n  const { currentUser } = useContext(AuthContext)\n  const { user } = useContext(PortfolioContext)\n  const [posts, setPosts] = useState([])\n  const [progress, setProgress] = useState(0)\n  const [loading, setLoading] = useState(false)\n\n  const createPost = (_post) => {\n    if (!currentUser && !user.username) return\n    setLoading(true)\n    const _docRef = db.collection('forum')\n\n    const { postImage } = _post\n    // add forum with out an image\n    if (!postImage) {\n      _docRef\n        .add({\n          post: _post,\n          author: user.email,\n          comments: [],\n          createdAt: timestamp(),\n        })\n        .then(() => setLoading(false))\n        .finally(() => {\n          window.location = '/posts'\n        })\n    }\n\n    // upload/update image url only\n    const types = ['image/png', 'image/jpeg']\n\n    if (postImage && types.includes(postImage.type)) {\n      const stgRef = storage.ref(_post.postTitle + currentUser.uid)\n      stgRef.put(postImage).on(\n        'state_changed',\n        (snap) => {\n          // uploading\n          const _percentage = (snap.bytesTransferred / snap.totalBytes) * 100\n          setProgress(_percentage)\n        },\n        (err) => setLoading(false),\n        () => {\n          // on finish upload\n          stgRef.getDownloadURL().then((url) => {\n            // get post image url\n            // when upload is done !\n            _docRef\n              .add({\n                post: {\n                  ..._post,\n                  postImage: url,\n                },\n                author: user.email,\n                comments: [],\n                createdAt: timestamp(),\n              })\n              .then(() => setLoading(false))\n              .finally(() => {\n                window.location = '/posts'\n              })\n          })\n        }\n      )\n    }\n  }\n\n  // this method is looking for a posts by its postId\n  // and returns his doc when its found\n  const isPostExists = (docId) => {\n    return db.collection('forum').doc(docId)\n  }\n\n  const addComment = (_post, _comment) => {\n    setLoading(true)\n    const date = Date.now()\n    const _userComment = {\n      userEmail: user.email,\n      comment: _comment,\n      createdAt: date,\n    }\n    const _docRef = db.collection('forum').doc(_post.docId)\n\n    _docRef.get().then((_doc) => {\n      if (_doc.exists) {\n        _docRef\n          .update({\n            comments: [..._doc.data().comments, _userComment],\n          })\n          .finally(() => setLoading(false))\n      }\n    })\n  }\n\n  // getting posts from forum collection\n  useEffect(() => {\n    const unsubscribe = db\n      .collection('forum')\n      .orderBy('createdAt', 'desc')\n      .onSnapshot((snapshot) => {\n        const _posts = snapshot.docs.map((_doc) => {\n          return {\n            docId: _doc.id,\n            ..._doc.data(),\n          }\n        })\n\n        setPosts(_posts)\n      })\n\n    return unsubscribe\n  }, [])\n\n  const values = { posts, createPost, isPostExists, addComment, progress, loading }\n\n  return <ForumContext.Provider value={values} children={children} />\n}\n\nexport { ForumContext, ForumProvider }\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect, useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { AuthContext } from '../context/authContext'\nimport { PortfolioContext } from '../context/context'\nimport { BsBellFill } from 'react-icons/bs'\nimport { ChatContext } from '../context/chatContext'\n// this is a very basic component\n// import logo from '../logo.svg'\n\nconst Navbar = () => {\n  const { currentUser, logout } = useContext(AuthContext)\n  const { user } = useContext(PortfolioContext)\n  const { setNotifications, notifications, setSelectedUser, changeNotificationStatus } =\n    useContext(ChatContext)\n  const history = useHistory()\n  const [isLoading, setIsLoading] = useState(false)\n\n  const triggerNotification = () => {\n    if (notifications?.from) {\n      Promise.allSettled([\n        setSelectedUser({\n          ...notifications.from,\n        }),\n        setNotifications({\n          read: true,\n          from: null,\n        }),\n        changeNotificationStatus(),\n        (document.title = 'DevBook | Portfolio'),\n      ]).then(() => {\n        history.push('/chat-room')\n      })\n    }\n  }\n\n  useEffect(() => {\n    if (!window.Notification) {\n      console.log('Browser does not support notifications.')\n    } else {\n      // check if permission is already granted\n      if (Notification.permission === 'granted') {\n        // show notification here\n        if (notifications && notifications.from && notifications.to.includes(currentUser.email)) {\n          // doesn't work in mobile yet\n          const options = {\n            body: notifications.from.message,\n            icon: notifications.from.photoURL,\n          }\n          const notification = new Notification(\n            `New message from ${notifications.from.username}`,\n            options\n          )\n\n          document.title = `${notifications.from.username} sent you a message`\n\n          // const audio = new Audio('/assets/wewew.m4a')\n          // audio.play()\n\n          notification.onclick = () => triggerNotification\n        }\n      } else {\n        // request permission from user\n        Notification.requestPermission()\n          .then(function (p) {\n            if (p === 'denied') {\n              // show notification here\n              console.log('User blocked notifications.')\n            }\n          })\n          .catch(function (err) {\n            console.error(err)\n          })\n      }\n    }\n  }, [notifications])\n\n  return (\n    <>\n      <header id='topnav' className='defaultscroll sticky bg-white'>\n        <div className='container'>\n          <Link to='/' className='logo'>\n            {/* <img alt='dev book' src={logo} className='logo-light-mode' /> */}\n            <div>\n              <h1>ANIR SPACE</h1>\n            </div>\n          </Link>\n          <div style={{ display: 'block', position: 'unset' }} id='navigation'>\n            <ul className='navigation-menu'>\n              <li>\n                <Link to='/posts' className='sub-menu-item'>\n                  Forum\n                </Link>\n              </li>\n\n              {currentUser ? (\n                <>\n                  <li className='menu-item'>\n                    <Link to='/chat-room'>chat room</Link>\n                  </li>\n\n                  <li className='menu-item'>\n                    <Link to='/profile'>Settings</Link>\n                  </li>\n\n                  {user && user.username && (\n                    <li className='menu-item'>\n                      <Link to={`/p/${user.username}`}>{user.username}</Link>\n                    </li>\n                  )}\n\n                  <li className='menu-item buy-button'>\n                    <button\n                      onClick={triggerNotification}\n                      className='btn text-primary btn-notification'\n                    >\n                      <BsBellFill />\n                      {notifications && notifications.from && (\n                        <span className='notification'></span>\n                      )}\n                    </button>\n                  </li>\n\n                  <li className='menu-item buy-button'>\n                    <button\n                      onClick={() => {\n                        setIsLoading(true)\n                        logout().finally(() => {\n                          setIsLoading(false)\n                        })\n                      }}\n                      className='btn btn-sm btn-soft-primary'\n                    >\n                      {isLoading ? (\n                        <div className='d-flex justify-content-center'>\n                          <div className='spinner-border'></div>\n                        </div>\n                      ) : (\n                        'LOGOUT'\n                      )}\n                    </button>\n                  </li>\n                </>\n              ) : (\n                <>\n                  <li className='menu-item'>\n                    <Link to='/sign-up'>sign up</Link>\n                  </li>\n                  <li className='menu-item '>\n                    <Link to='/log-in'>log in</Link>\n                  </li>\n                </>\n              )}\n            </ul>\n          </div>\n        </div>\n      </header>\n    </>\n  )\n}\n\nexport default Navbar\n","import React from 'react'\nimport { AiFillHeart } from 'react-icons/ai'\n\nconst Footer = () => {\n  return (\n    <footer className='footer footer-bar mt-5'>\n      <div className='container text-center'>\n        <div className='row align-items-center'>\n          <div className='col-sm-6'>\n            <div className='text-sm-start'>\n              <p className='mb-0'>\n                ©{new Date().getFullYear()} ANIR SPACE . Developed with\n                <AiFillHeart className='mdi mdi-heart text-danger mx-4' />\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React, { useContext } from 'react'\nimport { PortfolioContext } from '../context/context'\nimport { Link } from 'react-router-dom'\nimport { RiRadioButtonLine } from 'react-icons/ri'\nimport Navbar from '../components/Navbar'\nimport Footer from '../components/Footer'\n\nconst Home = () => {\n  const { users } = useContext(PortfolioContext)\n\n  return (\n    <>\n      <Navbar />\n      <main className='container mx-height '>\n        <h3 className='display-3 mb-3'>Home</h3>\n\n        {users.length === 0 && (\n          <div className='text-center'>\n            <h3 className='display-6'>\n              <i>No users yet</i>\n            </h3>\n          </div>\n        )}\n\n        <section className='row'>\n          {users.map((_user, idx) => {\n            const { username, online, photoURL, skills } = _user\n\n            const isOnline =\n              online === 'ONLINE'\n                ? 'bg-soft-success'\n                : online === 'OFFLINE'\n                ? 'bg-soft-danger'\n                : 'bg-soft-warning'\n\n            return (\n              <article key={idx} className='col-lg-4 col-md-6 col-12 mt-4 pt-2'>\n                <div className='candidate-list card rounded border-0 shadow'>\n                  <div className='card-body'>\n                    <ul className='list-unstyled align-items-center'>\n                      <li className='list-inline-item'>\n                        <span className={`${isOnline} badge rounded-pill`}>\n                          <RiRadioButtonLine />\n                        </span>\n                      </li>\n                    </ul>\n\n                    <div className='content text-center'>\n                      <img\n                        src={photoURL}\n                        alt={username}\n                        className='avatar avatar-md-md shadow-md rounded-circle'\n                      />\n                      <ul className='list-unstyled mb-1 mt-2'></ul>\n                      <Link to={`/p/${username}`} className='text-dark h5 name'>\n                        {username}\n                      </Link>\n                      <ul className='list-unstyled mt-3'>\n                        {skills &&\n                          skills.map(({ id, language }) => {\n                            return (\n                              <li key={id} className='list-inline-item m-1'>\n                                <span className='rounded bg-light py-1 px-2 text-muted small'>\n                                  {language}\n                                </span>\n                              </li>\n                            )\n                          })}\n                      </ul>\n\n                      {/* <p className='text-muted my-1'>Front-end Developer</p> */}\n\n                      {/* <span className='text-muted'>\n                        <i className='uil uil-graduation-cap h4 mb-0 me-2 text-primary'></i>\n                        Experience\n                        <span className='text-success'>3+ years</span>\n                      </span> */}\n\n                      <ul className='list-unstyled mt-3'></ul>\n                      <div className='d-grid'>\n                        <Link to={`/p/${username}`} className='btn btn-soft-primary'>\n                          Read More\n                          <i className='uil uil-angle-right-b align-middle'></i>\n                        </Link>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </article>\n            )\n          })}\n        </section>\n      </main>\n      <Footer />\n    </>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport { FiHome } from 'react-icons/fi'\nimport { Link, useHistory } from 'react-router-dom'\n\nconst Error = () => {\n  const history = useHistory()\n\n  return (\n    <>\n      <div className='back-to-home rounded d-none d-sm-block'>\n        <Link to='/' className='btn btn-icon btn-soft-primary'>\n          <FiHome />\n        </Link>\n      </div>\n\n      <section className='bg-home d-flex align-items-center'>\n        <div className='container'>\n          <div className='row justify-content-center'>\n            <div className='col-lg-8 col-md-12 text-center'>\n              <img src='/images/404.svg' className='img-fluid' alt='' />\n              <div className='text-uppercase mt-4 display-3'>Oh ! no</div>\n              <div className='text-capitalize text-dark mb-4 error-page'>\n                Page Not Found\n              </div>\n              <p className='text-muted para-desc mx-auto'>\n                Start working with\n                <span className='text-primary fw-bold'> DevBook </span>\n                that can provide everything you need to generate awareness,\n                drive traffic, connect.\n              </p>\n            </div>\n          </div>\n\n          <div className='row'>\n            <div className='col-md-12 text-center'>\n              <button\n                onClick={() => history.goBack()}\n                className='btn btn-soft-primary mt-4 ms-2'\n              >\n                Go To Back\n              </button>\n              <Link to='/' className='btn btn-primary mt-4 ms-2'>\n                Go To Home\n              </Link>\n            </div>\n          </div>\n        </div>\n      </section>\n    </>\n  )\n}\n\nexport default Error\n","import React, { useContext, useEffect, useState } from 'react'\nimport { PortfolioContext } from '../context/context'\nimport { AuthContext } from '../context/authContext'\nimport { FiTrash2 } from 'react-icons/fi'\nimport Navbar from '../components/Navbar'\nimport Footer from '../components/Footer'\n\n// i refactored this to be much cleaner and more understandable\nconst Profile = () => {\n  const { currentUser } = useContext(AuthContext)\n  const {\n    progress,\n    updateUserProfile,\n    message,\n    user,\n    updateSkill,\n    updateExperience,\n    addProject,\n    removeProject,\n    loading,\n    setLoading,\n  } = useContext(PortfolioContext)\n\n  const [userInfo, setUserInfo] = useState({\n    username: '',\n    bio: '',\n    address: '',\n    file: null,\n    birthDate: '',\n    skills: [],\n  })\n\n  const { username, bio, address, birthDate, skills, experience, projects } = userInfo\n  // Skills\n  const [language, setLanguage] = useState('')\n  const [percentage, setPercentage] = useState(50)\n  const [skillsList, setSkillsList] = useState([])\n\n  // Exp\n  const [year, setYear] = useState('')\n  const [title, setTitle] = useState('')\n  const [company, setCompany] = useState('')\n  const [description, setDescription] = useState('')\n  const [expList, setExpList] = useState([])\n\n  // projects\n  const [projectTitle, setProjectTitle] = useState('')\n  const [projectUrl, setProjectUrl] = useState('')\n  const [projectImage, setProjectImage] = useState(null) // Type File\n  const [projectDescription, setProjectDescription] = useState('')\n  const [projectsList, setProjectsList] = useState([])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n\n    if (username.trim() !== '') {\n      setLoading(true)\n      updateUserProfile(userInfo)\n    }\n  }\n\n  const submitSkillHandler = (e) => {\n    e.preventDefault()\n    // add skills\n\n    if (language.trim() !== '') {\n      setLoading(true)\n      userInfo.skills = [\n        ...skills,\n        {\n          id: Date.now(),\n          language,\n          percentage,\n        },\n      ]\n      updateSkill(userInfo.skills)\n      setPercentage(50)\n    } else {\n      // set an error\n    }\n  }\n\n  const submitExperienceHandler = (e) => {\n    e.preventDefault()\n    // add skills\n    setLoading(true)\n    userInfo.experience = [\n      ...experience,\n      {\n        id: Date.now(),\n        year,\n        title,\n        company,\n        description,\n      },\n    ]\n    updateExperience(userInfo.experience)\n    setYear('')\n    setTitle('')\n    setCompany('')\n    setDescription('')\n  }\n\n  const submitProjectHandler = (e) => {\n    e.preventDefault()\n\n    setLoading(true)\n    // add project\n    const _projectObj = {\n      id: Date.now(),\n      projectTitle,\n      projectUrl,\n      projectDescription,\n      projectImage, // type file\n    }\n    addProject(_projectObj, projects)\n  }\n\n  useEffect(() => {\n    if (user) {\n      setUserInfo({\n        username: user.username || '',\n        bio: user.bio || '',\n        address: user.address || '',\n        birthDate: user.birthDate || '',\n        // skills\n        skills: user.skills || [],\n        // experience\n        experience: user.experience || [],\n        // projects\n        projects: user.projects || [],\n      })\n      setSkillsList(user.skills || [])\n      setExpList(user.experience || [])\n      setProjectsList(user.projects || [])\n    }\n  }, [user, setLoading])\n\n  console.log(loading)\n\n  return (\n    <>\n      <Navbar />\n      <section className='container mx-height '>\n        <h3 className='display-3'>Profile</h3>\n        {message && <div className='alert alert-success'>{message}</div>}\n\n        {user && (\n          <img width='100' className='mb-3 img-thumbnail' src={user.photoURL} alt={user.username} />\n        )}\n\n        {progress > 0 && (\n          <div className='progress mb-3'>\n            <div\n              className='progress-bar progress-bar-striped progress-bar-animated'\n              role='progressbar'\n              aria-valuenow={progress}\n              aria-valuemin='0'\n              aria-valuemax='100'\n              style={{ width: progress + '%' }}\n            >\n              {progress.toFixed(1) + '%'}\n            </div>\n          </div>\n        )}\n\n        <form onSubmit={(e) => submitHandler(e)} className='card mb-3'>\n          <div className='card-body'>\n            <h3>User Info</h3>\n            <input disabled value={currentUser.email} type='email' className='form-control mb-3' />\n            <input\n              onChange={({ target }) => setUserInfo({ ...userInfo, username: target.value })}\n              value={username}\n              placeholder='username'\n              className='form-control mb-3'\n              type='text'\n            />\n            <input\n              onChange={({ target }) => setUserInfo({ ...userInfo, bio: target.value })}\n              value={bio}\n              placeholder='bio'\n              type='text'\n              className='form-control mb-3'\n            />\n\n            <textarea\n              onChange={({ target }) => setUserInfo({ ...userInfo, address: target.value })}\n              value={address}\n              placeholder='Address'\n              className='form-control mb-3'\n            />\n            <input\n              onChange={({ target }) => setUserInfo({ ...userInfo, file: target.files[0] })}\n              type='file'\n              className='form-control mb-3'\n            />\n            <input\n              onChange={({ target }) => setUserInfo({ ...userInfo, birthDate: target.value })}\n              value={birthDate}\n              type='date'\n              className='form-control mb-3'\n            />\n            <button disabled={loading} className='btn btn-primary mb-3'>\n              {loading ? (\n                <div className='d-flex justify-content-center'>\n                  <div className='spinner-border'></div>\n                </div>\n              ) : (\n                'Save'\n              )}\n            </button>\n          </div>\n        </form>\n\n        <form onSubmit={(e) => submitSkillHandler(e)} className='card mb-3'>\n          <div className='card-body'>\n            <h3>Skills</h3>\n            <label htmlFor='lang'>Language - {language}</label>\n            <select\n              defaultValue='select-value'\n              onChange={({ target }) => setLanguage(target.value)}\n              className='form-select mb-3'\n              id='lang'\n            >\n              <option disabled value='select-value'>\n                Select an Option\n              </option>\n              <option value='HTML'>HTML</option>\n              <option value='CSS'>CSS</option>\n              <option value='JS'>JS</option>\n              <option value='PHP'>PHP</option>\n              <option value='REACTJS'>REACTJS</option>\n              <option value='LARAVEL'>LARAVEL</option>\n            </select>\n            <label htmlFor='percent'>Percentage - {percentage}%</label>\n            <input\n              onChange={({ target }) => setPercentage(target.value)}\n              id='percent'\n              value={percentage}\n              className='form-range'\n              type='range'\n              min='0'\n              max='100'\n            />\n            <h5>Skills List</h5>\n            {skillsList.length === 0 && 'no skills yet'}\n            <ul className='list-group mb-3'>\n              {skillsList.map(({ language, percentage, id }) => {\n                return (\n                  <li key={id} className='list-group-item d-flex justify-content-between'>\n                    {language} -{percentage}%\n                    <button\n                      onClick={() => {\n                        setSkillsList(skillsList.filter((s) => s.id !== id))\n                        updateSkill(skillsList.filter((s) => s.id !== id))\n                      }}\n                      type='button'\n                      className='btn btn-sm btn-outline-danger'\n                    >\n                      <FiTrash2 />\n                    </button>\n                  </li>\n                )\n              })}\n            </ul>\n            <button disabled={loading} className='btn btn-primary mb-3'>\n              {loading ? (\n                <div className='d-flex justify-content-center'>\n                  <div className='spinner-border'></div>\n                </div>\n              ) : (\n                'Save'\n              )}\n            </button>\n          </div>\n        </form>\n\n        <form onSubmit={(e) => submitExperienceHandler(e)} className='card mb-3'>\n          <div className='card-body'>\n            <h3>Experience</h3>\n\n            <input\n              onChange={({ target }) => setYear(target.value)}\n              value={year}\n              placeholder='Year'\n              className='form-control mb-3'\n              type='text'\n            />\n            <input\n              onChange={({ target }) => setTitle(target.value)}\n              value={title}\n              placeholder='Title'\n              className='form-control mb-3'\n              type='text'\n            />\n            <input\n              onChange={({ target }) => setCompany(target.value)}\n              value={company}\n              placeholder='Company'\n              className='form-control mb-3'\n              type='text'\n            />\n            <textarea\n              onChange={({ target }) => setDescription(target.value)}\n              value={description}\n              placeholder='Description'\n              className='form-control mb-3'\n              type='text'\n            />\n            <h5>Exp List</h5>\n            {expList.length === 0 && 'no experience yet'}\n\n            <ul className='list-group mb-3'>\n              {expList &&\n                expList.map(({ year, title, id }, idx) => {\n                  return (\n                    <li key={id} className='list-group-item d-flex justify-content-between'>\n                      {year}, {title} - {idx + 1}\n                      <button\n                        onClick={() => {\n                          setExpList(experience.filter((s) => s.id !== id))\n                          updateExperience(experience.filter((s) => s.id !== id))\n                        }}\n                        type='button'\n                        className='btn btn-sm btn-outline-danger'\n                      >\n                        <FiTrash2 />\n                      </button>\n                    </li>\n                  )\n                })}\n            </ul>\n            <button disabled={loading} className='btn btn-primary mb-3'>\n              {loading ? (\n                <div className='d-flex justify-content-center'>\n                  <div className='spinner-border'></div>\n                </div>\n              ) : (\n                'Save'\n              )}\n            </button>\n          </div>\n        </form>\n\n        <form onSubmit={(e) => submitProjectHandler(e)} className='card'>\n          <div className='card-body'>\n            <h3>Projects</h3>\n\n            <input\n              value={projectTitle}\n              onChange={({ target }) => setProjectTitle(target.value)}\n              placeholder='Title'\n              className='form-control mb-3'\n              type='text'\n            />\n            <input\n              value={projectUrl}\n              onChange={({ target }) => setProjectUrl(target.value)}\n              placeholder='Url'\n              className='form-control mb-3'\n              type='text'\n            />\n            <input\n              onChange={({ target }) => setProjectImage(target.files[0])}\n              placeholder='Image'\n              className='form-control mb-3'\n              type='file'\n            />\n            <textarea\n              value={projectDescription}\n              onChange={({ target }) => setProjectDescription(target.value)}\n              placeholder='Description'\n              className='form-control mb-3'\n            />\n\n            <h5>Project List</h5>\n\n            {projectsList.length === 0 && 'no projects yet'}\n\n            <ul className='list-group mb-3'>\n              {projectsList.map((_project) => {\n                return (\n                  <li key={_project.id} className='list-group-item d-flex justify-content-between'>\n                    {_project.projectTitle}\n                    <button\n                      onClick={() => {\n                        setProjectsList(projectsList.filter((s) => s.id !== _project.id))\n                        removeProject(projectsList.filter((s) => s.id !== _project.id))\n                      }}\n                      type='button'\n                      className='btn btn-sm btn-outline-danger'\n                    >\n                      <FiTrash2 />\n                    </button>\n                  </li>\n                )\n              })}\n            </ul>\n            <button disabled={loading} className='btn btn-primary mb-3'>\n              {loading ? (\n                <div className='d-flex justify-content-center'>\n                  <div className='spinner-border'></div>\n                </div>\n              ) : (\n                'Save'\n              )}\n            </button>\n          </div>\n        </form>\n      </section>\n      <Footer />\n    </>\n  )\n}\n\nexport default Profile\n","import React, { useContext, useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { AuthContext } from '../../context/authContext'\nimport { FiHome, FiMail, FiKey } from 'react-icons/fi'\n\nconst Login = () => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [error, setError] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const { login } = useContext(AuthContext)\n  const history = useHistory()\n\n  const handleSignUp = (e) => {\n    e.preventDefault()\n    setIsLoading(true)\n    setError('')\n\n    try {\n      login(email, password)\n        .then(() => {\n          history.push('/')\n        })\n        .catch((err) => {\n          setError(err.message)\n        })\n        .finally(() => {\n          setIsLoading(false)\n        })\n    } catch (ex) {\n      setError(ex.message)\n    }\n  }\n\n  return (\n    <>\n      <div className='back-to-home rounded d-none d-sm-block'>\n        <Link to='/' className='btn btn-icon btn-soft-primary'>\n          <FiHome />\n        </Link>\n      </div>\n      <section className='bg-home d-flex align-items-center'>\n        <div className='container'>\n          <div className='row align-items-center'>\n            <div className='col-lg-7 col-md-6'>\n              <div className='me-lg-5'>\n                <img\n                  src='images/user/login.svg'\n                  className='img-fluid d-block mx-auto'\n                  alt=''\n                />\n              </div>\n            </div>\n            <div className='col-lg-5 col-md-6'>\n              <div className='card login-page bg-white shadow rounded border-0'>\n                <div className='card-body'>\n                  <h4 className='card-title text-center'>Login</h4>\n\n                  <form onSubmit={handleSignUp} className='login-form mt-4'>\n                    {error && <div className='alert alert-danger'>{error}</div>}\n                    <div className='row'>\n                      <div className='col-lg-12'>\n                        <div className='mb-3'>\n                          <label className='form-label'>\n                            Your Email <span className='text-danger'>*</span>\n                          </label>\n                          <div className='form-icon position-relative'>\n                            <FiMail className='fea icon-sm icons' />\n\n                            <input\n                              value={email}\n                              onChange={(event) => setEmail(event.target.value)}\n                              required\n                              id='email'\n                              type='email'\n                              placeholder='Enter your email here'\n                              className='form-control ps-5'\n                              name='email'\n                            />\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className='col-lg-12'>\n                        <div className='mb-3'>\n                          <label className='form-label'>\n                            Password <span className='text-danger'>*</span>\n                          </label>\n                          <div className='form-icon position-relative'>\n                            <FiKey className='fea icon-sm icons' />\n\n                            <input\n                              value={password}\n                              onChange={(event) =>\n                                setPassword(event.target.value)\n                              }\n                              required\n                              id='password'\n                              name='password'\n                              type='password'\n                              placeholder='Enter your password here'\n                              className='form-control ps-5'\n                            />\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className='col-lg-12'>\n                        <div className='d-flex justify-content-between'>\n                          <p className='forgot-pass mb-3'>\n                            <Link to='/' className='text-dark fw-bold'>\n                              Forgot password ?\n                            </Link>\n                          </p>\n                        </div>\n                      </div>\n\n                      <div className='col-lg-12 mb-0'>\n                        <div className='d-grid'>\n                          <button\n                            disabled={isLoading}\n                            type='submit'\n                            className='btn btn-primary'\n                          >\n                            {isLoading ? (\n                              <div className='d-flex justify-content-center'>\n                                <div className='spinner-border'></div>\n                              </div>\n                            ) : (\n                              'Log in'\n                            )}\n                          </button>\n                        </div>\n                      </div>\n\n                      <div className='col-12 text-center'>\n                        <p className='mb-0 mt-3'>\n                          <small className='text-dark me-2'>\n                            Don't have an account ?\n                          </small>\n                          <Link to='/sign-up' className='text-dark fw-bold'>\n                            Sign Up\n                          </Link>\n                        </p>\n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </>\n  )\n}\n\nexport default Login\n","import React, { useState } from 'react'\nimport { useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport { AuthContext } from '../../context/authContext'\nimport { db, timestamp } from '../../firebase'\nimport { FiHome, FiMail, FiKey, FiUser } from 'react-icons/fi'\nimport { DEFAULT_PROFILE_AVATAR } from '../../constants'\n\nconst SignUp = () => {\n  const [email, setEmail] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [error, setError] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const { signup } = useContext(AuthContext)\n\n  const handleSignUp = (e) => {\n    e.preventDefault()\n    if (password.trim() !== confirmPassword.trim()) {\n      return setError('Passwords do not match 😭😭')\n    }\n    if (username.trim() === '') {\n      return setError('Username is Required')\n    }\n    setIsLoading(true)\n    setError('')\n\n    try {\n      db.collection('users')\n        .where('username', '==', username)\n        .get()\n        .then((snapshot) => {\n          const _users = snapshot.docs.map((doc) => doc.data())\n          if (_users?.length <= 0) {\n            signup(email, password)\n              .then(({ user }) => {\n                db.collection('users')\n                  .doc(email)\n                  .set({\n                    username: username,\n                    bio: '',\n                    address: '',\n                    birthDate: '',\n                    photoURL: DEFAULT_PROFILE_AVATAR,\n                    uid: user.uid,\n                    email: email,\n                    bgImage: '/images/enterprise.png',\n                    lastLoggedIn: timestamp(),\n                  })\n                  .then(() => {\n                    window.location = '/profile'\n                  })\n              })\n              .catch((err) => {\n                setError(err.message)\n              })\n              .finally(() => {\n                // after the sign up user will be directed to his profile\n                setIsLoading(false)\n              })\n          } else {\n            setError('Username Already Taken ')\n            setIsLoading(false)\n          }\n        })\n        .catch((err) => {\n          setError(err)\n        })\n    } catch (ex) {\n      setError(ex.message)\n    }\n  }\n  return (\n    <>\n      <div className='back-to-home rounded d-none d-sm-block'>\n        <Link to='/' className='btn btn-icon btn-soft-primary'>\n          <FiHome />\n        </Link>\n      </div>\n\n      <section className='bg-auth-home d-table w-100'>\n        <div className='container'>\n          <div className='row align-items-center'>\n            <div className='col-lg-7 col-md-6'>\n              <div className='me-lg-5'>\n                <img src='images/user/signup.svg' className='img-fluid d-block mx-auto' alt='' />\n              </div>\n            </div>\n            <div className='col-lg-5 col-md-6'>\n              <div className='card shadow rounded border-0'>\n                <div className='card-body'>\n                  <h4 className='card-title text-center'>Sign up</h4>\n                  <form className='login-form mt-4' onSubmit={handleSignUp}>\n                    {error && <div className='alert alert-danger'>{error}</div>}\n\n                    <div className='row'>\n                      <div className='col-md-12'>\n                        <div className='mb-3'>\n                          <label className='form-label'>\n                            Your Username <span className='text-danger'>*</span>\n                          </label>\n                          <div className='form-icon position-relative'>\n                            <FiUser className='fea icon-sm icons' />\n\n                            <input\n                              value={username}\n                              onChange={(event) => setUsername(event.target.value)}\n                              required\n                              id='username'\n                              name='username'\n                              type='text'\n                              placeholder='Enter your username here'\n                              className='form-control ps-5'\n                            />\n                          </div>\n                        </div>\n                      </div>\n                      <div className='col-md-12'>\n                        <div className='mb-3'>\n                          <label className='form-label'>\n                            Your Email <span className='text-danger'>*</span>\n                          </label>\n                          <div className='form-icon position-relative'>\n                            <FiMail className='fea icon-sm icons' />\n\n                            <input\n                              value={email}\n                              onChange={(event) => setEmail(event.target.value)}\n                              required\n                              id='email'\n                              name='email'\n                              type='email'\n                              placeholder='Enter your email here'\n                              className='form-control ps-5'\n                            />\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className='col-md-12'>\n                        <div className='mb-3'>\n                          <label className='form-label'>\n                            Password <span className='text-danger'>*</span>\n                          </label>\n                          <div className='form-icon position-relative'>\n                            <FiKey className='fea icon-sm icons' />\n                            <input\n                              value={password}\n                              onChange={(event) => setPassword(event.target.value)}\n                              required\n                              id='password'\n                              name='password'\n                              type='password'\n                              className='form-control ps-5'\n                              placeholder='Enter your password here'\n                            />\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className='col-md-12'>\n                        <div className='mb-3'>\n                          <label className='form-label'>\n                            Confirm Password\n                            <span className='text-danger'>*</span>\n                          </label>\n                          <div className='form-icon position-relative'>\n                            <FiKey className='fea icon-sm icons' />\n                            <input\n                              value={confirmPassword}\n                              onChange={(event) => setConfirmPassword(event.target.value)}\n                              id='password-confirmation'\n                              name='password-confirmation'\n                              type='password'\n                              className='form-control ps-5'\n                              placeholder='Confirm Password'\n                              required\n                            />\n                          </div>\n                        </div>\n                      </div>\n\n                      {/* <div className='col-md-12'>\n                        <div className='mb-3'>\n                          <div className='form-check'>\n                            <input\n                              className='form-check-input'\n                              type='checkbox'\n                              value=''\n                              id='flexCheckDefault'\n                            />\n                            <label\n                              className='form-check-label'\n                              for='flexCheckDefault'\n                            >\n                              I Accept\n                              <a href='#' className='text-primary'>\n                                Terms And Condition\n                              </a>\n                            </label>\n                          </div>\n                        </div>\n                      </div> */}\n\n                      <div className='col-md-12'>\n                        <div className='d-grid'>\n                          <button type='submit' disabled={isLoading} className='btn btn-primary'>\n                            {isLoading ? (\n                              <div className='d-flex justify-content-center'>\n                                <div className='spinner-border'></div>\n                              </div>\n                            ) : (\n                              'Register'\n                            )}\n                          </button>\n                        </div>\n                      </div>\n\n                      <div className='mx-auto'>\n                        <p className='mb-0 mt-3'>\n                          <small className='text-dark me-2'>Already have an account ?</small>\n                          <Link to='log-in' className='text-dark fw-bold'>\n                            Log in\n                          </Link>\n                        </p>\n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </>\n  )\n}\n\nexport default SignUp\n","export const DEFAULT_PROFILE_AVATAR =\n  'https://firebasestorage.googleapis.com/v0/b/react-dev-book.appspot.com/o/default%2Fdefault.jpg?alt=media&token=beb80150-a8da-46f0-908f-8cbfb7ad2f4c'\n","import React, { useContext, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { AuthContext } from '../../context/authContext'\nimport { FiHome, FiMail } from 'react-icons/fi'\n\nconst ForgotPassword = () => {\n  const [email, setEmail] = useState('')\n  const [error, setError] = useState('')\n  const [message, setMessage] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const { resetPassword } = useContext(AuthContext)\n\n  const handleForgotPassword = (e) => {\n    e.preventDefault()\n    try {\n      setMessage('')\n      setError('')\n      setIsLoading(true)\n\n      resetPassword(email)\n        .then(() => {\n          setMessage('Check your email for further instructions 😊😊')\n        })\n        .catch((err) => {\n          setError(err.message)\n        })\n        .finally(() => {\n          setIsLoading(false)\n        })\n    } catch (ex) {\n      setError(ex.message)\n    }\n  }\n\n  return (\n    <>\n      <div className='back-to-home rounded d-none d-sm-block'>\n        <Link to='/' className='btn btn-icon btn-soft-primary'>\n          <FiHome />\n        </Link>\n      </div>\n\n      <section className='bg-home d-flex align-items-center'>\n        <div className='container'>\n          <div className='row align-items-center'>\n            <div className='col-lg-7 col-md-6'>\n              <div className='me-lg-5'>\n                <img\n                  src='images/user/recovery.svg'\n                  className='img-fluid d-block mx-auto'\n                  alt=''\n                />\n              </div>\n            </div>\n            <div className='col-lg-5 col-md-6'>\n              <div className='card shadow rounded border-0'>\n                <div className='card-body'>\n                  <h4 className='card-title text-center'>Recover Account</h4>\n\n                  <form\n                    onSubmit={handleForgotPassword}\n                    className='login-form mt-4'\n                  >\n                    {message && (\n                      <div className='alert alert-success'>{message}</div>\n                    )}\n                    {error && <div className='alert alert-danger'>{error}</div>}\n                    <div className='row'>\n                      <div className='col-lg-12'>\n                        <p className='text-muted'>\n                          Please enter your email address. You will receive a\n                          link to create a new password via email.\n                        </p>\n                        <div className='mb-3'>\n                          <label className='form-label'>\n                            Email address <span className='text-danger'>*</span>\n                          </label>\n                          <div className='form-icon position-relative'>\n                            <FiMail className='fea icon-sm icons' />\n                            <input\n                              value={email}\n                              onChange={(event) => setEmail(event.target.value)}\n                              required\n                              id='email'\n                              name='email'\n                              type='email'\n                              className='form-control ps-5'\n                              placeholder='Enter Your Email Address'\n                            />\n                          </div>\n                        </div>\n                      </div>\n                      <div className='col-lg-12'>\n                        <div className='d-grid'>\n                          <button\n                            className='btn btn-primary'\n                            disabled={isLoading}\n                            type='submit'\n                          >\n                            {isLoading ? (\n                              <div className='d-flex justify-content-center'>\n                                <div className='spinner-border'></div>\n                              </div>\n                            ) : (\n                              'Send'\n                            )}\n                          </button>\n                        </div>\n                      </div>\n                      <div className='mx-auto'>\n                        <p className='mb-0 mt-3'>\n                          <small className='text-dark me-2'>\n                            Remember your password ?\n                          </small>\n                          <Link to='/log-in' className='text-dark fw-bold'>\n                            Log in\n                          </Link>\n                        </p>\n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </>\n  )\n}\n\nexport default ForgotPassword\n","import React from 'react'\n\nconst Skills = ({ skills }) => {\n  return (\n    <>\n      <h4 className='mt-lg-5 mt-4'>Skills :</h4>\n\n      {skills ? (\n        skills.map(({ language, percentage, id }) => {\n          return (\n            <div key={id} className='progress-box mt-4'>\n              <h6 className='title text-muted'>{language}</h6>\n              <div className='progress'>\n                <div\n                  className='progress-bar position-relative bg-primary'\n                  style={{ width: percentage + '%' }}\n                >\n                  <div className='progress-value d-block text-muted h6'>\n                    {percentage}%\n                  </div>\n                </div>\n              </div>\n            </div>\n          )\n        })\n      ) : (\n        <h5>\n          <i>No skills</i>\n        </h5>\n      )}\n    </>\n  )\n}\n\nexport default Skills\n","import React, { useContext } from 'react'\nimport { AiFillEdit } from 'react-icons/ai'\nimport { BsChat } from 'react-icons/bs'\nimport { RiRadioButtonLine } from 'react-icons/ri'\nimport { useHistory } from 'react-router-dom'\nimport { AuthContext } from '../../context/authContext'\nimport { ChatContext } from '../../context/chatContext'\nimport { PortfolioContext } from '../../context/context'\nimport Skills from './Skills'\n\nconst Hero = ({ userInfo }) => {\n  const {\n    skills,\n    address,\n    bio,\n    birthDate,\n    email,\n    photoURL,\n    username,\n    experience,\n    projects,\n    bgImage,\n    online,\n  } = userInfo\n  const history = useHistory()\n  const { changeUserBackground, progress } = useContext(PortfolioContext)\n  const { setSelectedUser } = useContext(ChatContext)\n  const { currentUser } = useContext(AuthContext)\n\n  const triggerNotification = () => {\n    Promise.allSettled([\n      setSelectedUser({\n        ...userInfo,\n      }),\n    ]).then(() => {\n      history.push('/chat-room')\n    })\n  }\n  // TODO: online here\n  // TODO: icons\n  return (\n    <>\n      <div className='mx-height'>\n        <section\n          style={{ backgroundImage: `url('${bgImage}')` }}\n          className='bg-half-260 d-table w-100'\n        >\n          <div className='bg-overlay relative'>\n            {currentUser?.email === email && (\n              <>\n                <label\n                  htmlFor='bg-image'\n                  style={{ fontSize: '16px' }}\n                  className='m-2 btn-edit-background btn btn-sm btn-warning'\n                >\n                  {progress ? `Uploading ${progress.toFixed(1)}% ` : <AiFillEdit />}\n                </label>\n                <input\n                  onChange={({ target }) => changeUserBackground(target.files[0])}\n                  hidden\n                  id='bg-image'\n                  type='file'\n                />\n              </>\n            )}\n          </div>\n        </section>\n        <section className='section'>\n          <div className='container'>\n            <div className='row'>\n              <div className='col-lg-4 col-md-5 col-12'>\n                <div className='card job-profile shadow border-0'>\n                  <div className='text-center py-5 border-bottom rounded-top'>\n                    <img\n                      src={photoURL}\n                      className='  avatar avatar-medium mx-auto rounded-circle shadow d-block'\n                      alt=''\n                    />\n\n                    <h5 className='mt-3 mb-0'>\n                      {username}\n                      <span\n                        className={\n                          online === 'ONLINE'\n                            ? 'text-success'\n                            : online === 'OFFLINE'\n                            ? 'text-danger'\n                            : 'text-warning'\n                        }\n                      >\n                        <RiRadioButtonLine style={{ fontSize: '25px' }} />\n                      </span>\n                    </h5>\n                    <p className='text-muted mb-0'>Senior Web Developer</p>\n\n                    {/* TODO: add position */}\n                  </div>\n                  <div className='card-body'>\n                    <h5 className='card-title'>Personal Details :</h5>\n\n                    <ul className='list-unstyled'>\n                      <li className='h6'>\n                        <span className='text-muted'>Email :</span>\n                        {email}\n                      </li>\n                      <li className='h6'>\n                        <span className='text-muted'>D.O.B. :</span>\n                        {birthDate}\n                      </li>\n                      <li className='h6'>\n                        <span className='text-muted'>Address :</span>\n                        {address}\n                      </li>\n                    </ul>\n                    <div className='d-grid'>\n                      <button onClick={triggerNotification} className='btn btn-primary'>\n                        <BsChat className='align-middle mx-3' />\n                        Contact Me\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className='col-lg-8 col-md-7 col-12 mt-4 mt-sm-0 pt-2 pt-sm-0'>\n                <div className='ms-lg-4'>\n                  <h4>About Me:</h4>\n                  <p className='text-muted mb-0'>{bio}</p>\n                  <h4 className='mt-lg-5 mt-4'>Experience :</h4>\n                  <div className='row'>\n                    {experience?.map(({ year, title, company, description }, idx) => {\n                      return (\n                        <div className='col-lg-12 mt-4 pt-2' key={idx}>\n                          <div className='d-flex'>\n                            <div className='company-logo text-muted h6 me-3 text-center'>\n                              {year}\n                            </div>\n                            <div className='flex-1'>\n                              <h5 className='title mb-0'>{title}</h5>\n                              <small className='text-muted company-university'>{company}</small>\n                              <p className='text-muted mt-2 mb-0'>{description}</p>\n                            </div>\n                          </div>\n                        </div>\n                      )\n                    })}\n                  </div>\n\n                  <Skills skills={skills} />\n\n                  <h4 className='mt-lg-5 mt-4'>Projects :</h4>\n                  <section className='row'>\n                    {projects &&\n                      projects.map((_project) => {\n                        const { id, projectTitle, projectUrl, projectDescription, projectImage } =\n                          _project\n                        return (\n                          <article key={id} className='col-md-6 col-12 mt-4 pt-2'>\n                            <div className='card border-0 work-container work-classic'>\n                              <div className='card-body p-0'>\n                                <a target='_blank' href={projectUrl} rel='noreferrer'>\n                                  <img\n                                    src={projectImage}\n                                    alt={projectTitle}\n                                    className='img-fluid rounded work-image'\n                                  />\n                                </a>\n                                <div className='content pt-3'>\n                                  <h5 className='mb-0'>\n                                    <a\n                                      target='_blank'\n                                      href={projectUrl}\n                                      rel='noreferrer'\n                                      className='text-dark title'\n                                    >\n                                      {projectTitle}\n                                    </a>\n                                  </h5>\n                                  <p className='text-muted tag mb-0'>{projectDescription}</p>\n                                </div>\n                              </div>\n                            </div>\n                          </article>\n                        )\n                      })}\n                  </section>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </>\n  )\n}\n\nexport default Hero\n","import React, { useContext, useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { PortfolioContext } from '../context/context'\nimport Hero from '../components/portfolio/Hero'\nimport PageLoading from '../components/PageLoading'\nimport Navbar from '../components/Navbar'\nimport Footer from '../components/Footer'\n\nconst Portfolio = () => {\n  const { username } = useParams()\n  const { isUserExists } = useContext(PortfolioContext)\n  const [exists, setExists] = useState(false)\n  const [userInfo, setUserInfo] = useState({})\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    let _exists = false\n    isUserExists(username)\n      .then((_result) => {\n        const data = _result.docs.map((_doc) => {\n          return {\n            docId: _doc.id,\n            ..._doc.data(),\n          }\n        })\n        setUserInfo(data[0])\n        _exists = data.length > 0 ? true : false\n      })\n      .finally(() => {\n        setLoading(false)\n        setExists(_exists)\n      })\n  }, [isUserExists, username])\n\n  // show this if loading is finished and he doesn't exist\n  if (!loading && !exists) {\n    return (\n      <div className='text-center'>\n        <h1 className='display-1'>User not found</h1>\n      </div>\n    )\n  }\n\n  // show this if still loading\n  if (loading) {\n    return <PageLoading />\n  }\n\n  // show this if user was found\n  if (exists) {\n    return (\n      <>\n        <Navbar />\n\n        <Hero userInfo={userInfo} />\n\n        <Footer />\n      </>\n    )\n  }\n}\n\nexport default Portfolio\n","import React from 'react'\nimport { useContext } from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { AuthContext } from '../context/authContext'\n\n// this is the private route that protects\n// our app from getting accessed by user not logged in\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const { currentUser } = useContext(AuthContext)\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        return currentUser ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to='/log-in' />\n        )\n      }}\n    ></Route>\n  )\n}\n\nexport default PrivateRoute\n","import React, { useContext, useEffect, useRef, useState } from 'react'\nimport { ChatContext } from '../context/chatContext'\nimport { PortfolioContext } from '../context/context'\nimport { RiRadioButtonLine } from 'react-icons/ri'\nimport { AuthContext } from '../context/authContext'\nimport moment from 'moment'\nimport { Link } from 'react-router-dom'\nimport Navbar from '../components/Navbar'\nimport Footer from '../components/Footer'\n\n// as i sed in the chat context this bit difficult logic to comprehend\nconst ChatRoom = () => {\n  const { currentUser } = useContext(AuthContext)\n  const { users } = useContext(PortfolioContext)\n  const {\n    messages,\n    startConversation,\n    selectedUser,\n    setSelectedUser,\n    notifications,\n  } = useContext(ChatContext)\n  const [message, setMessage] = useState('')\n  const [error, setError] = useState('')\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n\n    if (message.trim() === '') {\n      setError('enter a message')\n    } else if (!selectedUser.uid) {\n      setError('select a user to chat with')\n    } else {\n      startConversation(message)\n      setMessage('')\n      setError('')\n    }\n\n    setTimeout(() => {\n      setError('')\n    }, 2500)\n  }\n\n  // set notifications\n\n  // scroll down when a message is added to the chat\n  const down = useRef()\n  useEffect(() => {\n    down.current.scrollIntoView({ behavior: 'smooth' })\n  }, [messages])\n\n  return (\n    <>\n      <Navbar />\n      <section className='container mx-height '>\n        <div className='row'>\n          <div className=' col-5 col-lg-5 col-md-12 my-5'>\n            <article className='card '>\n              <div className='card-body'>\n                <h5 className='card-title mb-0'>Users | {users?.length}</h5>\n\n                <ul className='media-list list-unstyled mb-0'>\n                  {/* // => this filter is if you want to message your self (if you are crazy enough)\n                  // ?.filter((_user) => _user?.room?.includes(currentUser.email)) */}\n                  {users?.map((_user) => {\n                    const { uid, docId, online, photoURL, username } = _user\n                    return (\n                      <li key={uid} className='mt-4'>\n                        <div className='d-flex  align-items-center'>\n                          <Link to={`/p/${username}`} className='pe-3'>\n                            <img\n                              className='img-fluid avatar avatar-md-sm rounded-circle shadow'\n                              src={photoURL}\n                              alt={username}\n                            />\n                          </Link>\n                          <div className='flex-1 commentor-detail'>\n                            <h6 className='mb-0'>\n                              <Link\n                                to={`/p/${username}`}\n                                className='text-dark media-heading'\n                              >\n                                {docId}\n                              </Link>\n                            </h6>\n                            <small className='text-muted'>\n                              <button\n                                className={\n                                  selectedUser?.uid === uid\n                                    ? 'btn btn-sm btn-primary'\n                                    : 'btn btn-sm btn-outline-primary'\n                                }\n                                onClick={() =>\n                                  setSelectedUser({\n                                    ..._user,\n                                    email: _user.docId,\n                                  })\n                                }\n                              >\n                                {username}\n                              </button>\n                            </small>\n                          </div>\n                          <span\n                            className={\n                              online === 'ONLINE'\n                                ? 'text-success'\n                                : online === 'OFFLINE'\n                                ? 'text-danger'\n                                : 'text-warning'\n                            }\n                          >\n                            <RiRadioButtonLine />\n                          </span>\n                          {notifications &&\n                            notifications.from &&\n                            notifications.from.email.includes(docId) && (\n                              <span className={'text-danger'}>\n                                <RiRadioButtonLine />\n                              </span>\n                            )}\n                        </div>\n                      </li>\n                    )\n                  })}\n                </ul>\n              </div>\n            </article>\n          </div>\n\n          <article className='col-6 col-lg-6 col-md-12 my-5'>\n            <div className='card'>\n              <div className='card-body'>\n                <h5 className='display-5'>Chat</h5>\n                {error && <div className='alert alert-warning'>{error}</div>}\n                <div\n                  className='list-group mb-3'\n                  style={{\n                    maxHeight: '300px',\n                    minHeight: '300px',\n                    overflowY: 'scroll',\n                    scrollBehavior: 'smooth',\n                  }}\n                >\n                  {!selectedUser.uid && (\n                    <div className='text-center'>\n                      <h3 className='fw-light'>No Selected User</h3>\n                    </div>\n                  )}\n                  {messages.map(({ message, uid, email, createdAt }, idx) => {\n                    const author = users?.find((_user) => _user.docId === email)\n                    return (\n                      <section\n                        key={idx}\n                        className='list-group-item d-flex justify-content-between'\n                      >\n                        <article className='d-flex align-items-center'>\n                          <div className='d-flex align-items-start flex-column justify-content-center'>\n                            <img\n                              className='rounded-lg'\n                              width='40'\n                              src={author?.photoURL}\n                              alt={author?.username}\n                            />\n\n                            <small\n                              className={\n                                currentUser.uid === uid\n                                  ? 'badge bg-primary my-2'\n                                  : 'badge bg-warning my-2'\n                              }\n                            >\n                              {author?.username}\n                            </small>\n                          </div>\n                          <p className='m-3 bg-light'>{message}</p>\n                        </article>\n                        <small className='fw-bold' style={{ fontSize: '10px' }}>\n                          {moment(createdAt?.toDate(), 'MMDDYY').fromNow()}\n                        </small>\n                      </section>\n                    )\n                  })}\n\n                  {/* this is to auto scroll down */}\n                  <span ref={down}></span>\n                </div>\n\n                <form onSubmit={(e) => submitHandler(e)}>\n                  <textarea\n                    autoFocus\n                    className='form-control'\n                    placeholder='Enter your message here !'\n                    type='text'\n                    value={message}\n                    onChange={({ target }) => setMessage(target.value)}\n                  />\n                  <div className='d-flex my-2 flex-row-reverse'>\n                    <button className='btn btn-soft-success '>Send</button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </article>\n        </div>\n      </section>\n      <Footer />\n    </>\n  )\n}\n\nexport default ChatRoom\n","import React from 'react'\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport { dark } from 'react-syntax-highlighter/dist/cjs/default-highlight'\n\nexport const components = {\n  code({ node, inline, className, children, ...props }) {\n    const match = /language-(\\w+)/.exec(className || '')\n    return !inline && match ? (\n      <SyntaxHighlighter\n        style={dark}\n        language={match[1]}\n        PreTag='div'\n        children={String(children).replace(/\\n$/, '')}\n        {...props}\n      />\n    ) : (\n      <code className={className} {...props} />\n    )\n  },\n}\n","import React, { useContext } from 'react'\nimport moment from 'moment'\nimport { Link } from 'react-router-dom'\nimport { ForumContext } from '../../context/forumContext'\nimport { BiComment } from 'react-icons/bi'\nimport { PortfolioContext } from '../../context/context'\nimport ReactMarkdown from 'react-markdown'\nimport { components } from '../../components/MarkdownPost'\nimport Navbar from '../../components/Navbar'\nimport Footer from '../../components/Footer'\n\nconst PostList = () => {\n  const { posts } = useContext(ForumContext)\n  const { users } = useContext(PortfolioContext)\n\n  return (\n    <>\n      <Navbar />\n      <main className='container'>\n        <nav className='d-flex align-items-center justify-content-between'>\n          <h3 className='display-4'>Forum</h3>\n          <Link className='btn btn-success' to='/posts/create'>\n            + create your post\n          </Link>\n        </nav>\n\n        <div className='row my-5'>\n          {posts?.map(({ docId, author: authorEmail, post, comments, createdAt }) => {\n            const author = users?.find((_user) => _user.docId === authorEmail)\n\n            return (\n              <div key={docId} className='col-12 mb-3'>\n                <div className='card shadow-md rounded-md'>\n                  <div className='card-body '>\n                    <Link to={`post/${docId}`}>\n                      <h1>{post.postTitle}?</h1>\n                    </Link>\n\n                    <ReactMarkdown components={components} children={post.postText} />\n\n                    <hr />\n                    <div className='d-flex justify-content-between align-items-center'>\n                      <div>\n                        <img\n                          alt={author?.username}\n                          src={author?.photoURL}\n                          className='img-fluid avatar avatar-ex-sm rounded-circle'\n                        />\n                        <span className='mx-2'>Posted By</span>\n                        <Link to={`/p/${author?.username}`}>{author?.username}</Link>\n                        <small className='mx-2'>\n                          {createdAt && moment(createdAt.toDate(), 'MMDDYY').fromNow()}\n                        </small>\n                      </div>\n                      <div className='d-flex  align-items-center'>\n                        <small style={{ fontSize: '22px' }}>\n                          <BiComment />\n                        </small>\n                        {comments?.length}+\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )\n          })}\n        </div>\n      </main>\n      <Footer />\n    </>\n  )\n}\n\nexport default PostList\n","import React, { useContext, useState } from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport Navbar from '../../components/Navbar'\nimport Footer from '../../components/Footer'\nimport { ForumContext } from '../../context/forumContext'\nimport { components } from '../../components/MarkdownPost'\n\nconst CreatePost = () => {\n  const { createPost, progress, loading } = useContext(ForumContext)\n\n  const [post, setPost] = useState({\n    postTitle: '',\n    postText: '',\n    postImage: null,\n  })\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n\n    if (post.postTitle.trim() !== '') {\n      createPost(post)\n    }\n  }\n\n  return (\n    <>\n      <Navbar />\n      <main className='container mx-height '>\n        <h1 className='display-4'>Create Post</h1>\n\n        <form onSubmit={(e) => submitHandler(e)}>\n          <input\n            value={post.postTitle}\n            onChange={({ target }) => setPost({ ...post, postTitle: target.value })}\n            className='form-control mb-3'\n            placeholder='title'\n            type='text'\n          />\n          <input\n            onChange={({ target }) => setPost({ ...post, postImage: target.files[0] })}\n            className='form-control mb-3'\n            type='file'\n          />\n          <textarea\n            rows='15'\n            placeholder='Enter more information ....'\n            value={post.postText}\n            onChange={({ target }) => setPost({ ...post, postText: target.value })}\n            className='form-control mb-3'\n          />\n          <ReactMarkdown components={components} children={post.postText} />\n          <button disabled={loading} className='btn btn-info'>\n            {progress ? `Creating... ${progress?.toFixed(1)}%` : 'Create Post'}\n          </button>\n        </form>\n      </main>\n      <Footer />\n    </>\n  )\n}\n\nexport default CreatePost\n","import React, { useContext, useEffect, useState } from 'react'\nimport { Link, useParams } from 'react-router-dom'\nimport { ForumContext } from '../../context/forumContext'\nimport PageLoading from '../../components/PageLoading'\nimport { AuthContext } from '../../context/authContext'\nimport moment from 'moment'\nimport { PortfolioContext } from '../../context/context'\nimport ReactMarkdown from 'react-markdown'\nimport { components } from '../../components/MarkdownPost'\nimport Navbar from '../../components/Navbar'\nimport Footer from '../../components/Footer'\n\nconst SinglePost = () => {\n  const { currentUser } = useContext(AuthContext)\n  const { postId } = useParams()\n  const { isPostExists, addComment } = useContext(ForumContext)\n  const [exists, setExists] = useState(false)\n  const [post, setPost] = useState({})\n  const [loading, setLoading] = useState(true)\n  const [comment, setComment] = useState('')\n  const { users } = useContext(PortfolioContext)\n  const author = users?.find((_user) => _user.docId === post.author)\n\n  // adding comment\n  const submitCommentHandler = (e) => {\n    e.preventDefault()\n    if (!currentUser) return\n\n    // add comment to this post\n    if (comment.trim() !== '') {\n      addComment(post, comment)\n      setComment('')\n    }\n  }\n\n  useEffect(() => {\n    let _exists = false\n    isPostExists(postId)\n      .get()\n      .then((doc) => {\n        if (doc.exists) {\n          _exists = true\n          setPost({\n            docId: doc.id,\n            ...doc.data(),\n          })\n        } else {\n          _exists = false\n          console.log('No such document!')\n        }\n      })\n      .finally(() => {\n        setLoading(false)\n        setExists(_exists)\n      })\n  }, [isPostExists, postId])\n\n  // show this if loading is finished and he doesn't exist\n  if (!loading && !exists) {\n    return (\n      <div className='text-center'>\n        <h1 className='display-1'>Post not found</h1>\n      </div>\n    )\n  }\n\n  // show this if still loading\n  if (loading) {\n    return <PageLoading />\n  }\n\n  // show this if user was found\n  if (exists) {\n    return (\n      <>\n        <Navbar />\n        <main className='container mx-height '>\n          <div className='row mb-3'>\n            <div className='col-12'>\n              <h1 className='display-1'>Post</h1>\n              <div className='card'>\n                <div className='card-body'>\n                  <div className='d-flex flex-column'>\n                    {author?.photoURL && (\n                      <Link to={`/p/${author?.username}`}>\n                        <img\n                          className='rounded-lg'\n                          width='50'\n                          src={author?.photoURL}\n                          alt={author?.username}\n                        />\n                      </Link>\n                    )}\n                    <Link to={`/p/${author?.username}`}>\n                      <p className='text-uppercase'>{author?.username}</p>\n                    </Link>\n                  </div>\n\n                  <div className='card my-5 '>\n                    <div className='card-body'>\n                      <h3>{post.post.postTitle}</h3>\n                      {post.post.postImage && (\n                        <img width='200' src={post.post.postImage} alt={post.post.postTitle} />\n                      )}\n                      <ReactMarkdown components={components} children={post.post.postText} />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className='card'>\n            <div className='card-body'>\n              <h4>Leave A Comment :</h4>\n\n              {currentUser ? (\n                <form onSubmit={(e) => submitCommentHandler(e)} className='mb-4'>\n                  <label htmlFor='comment'>Your Comment</label>\n                  <div className='row'>\n                    <div className='col-6'>\n                      <textarea\n                        id='comment'\n                        onChange={({ target }) => setComment(target.value)}\n                        value={comment}\n                        className='form-control mb-2'\n                        placeholder='write your answer here !!'\n                      />\n                    </div>\n                    <div className='col-6'>\n                      <ReactMarkdown components={components} children={comment} />\n                    </div>\n                  </div>\n                  <button disabled={loading} className='btn btn-sm btn-info'>\n                    {loading ? 'Submitting ' : 'Submit'}\n                  </button>\n                </form>\n              ) : (\n                <Link to='/log-in'>Log In</Link>\n              )}\n            </div>\n          </div>\n          <ul className='d-flex flex-column align-items-center media-list list-unstyled mb-0'>\n            {post?.comments\n              ?.sort((a, b) => b.createdAt - a.createdAt)\n              .map(({ userEmail, comment, createdAt }, idx) => {\n                const user = users?.find((_user) => _user.docId === userEmail)\n                return (\n                  <li style={{ width: 90 + '%' }} key={idx} className='mt-4 card'>\n                    <div className='card-body d-flex justify-content-between'>\n                      <div className='d-flex align-items-center'>\n                        <div className='d-flex flex-column align-items-start'>\n                          <Link to={`/p/${user?.username}`} className='pe-3'>\n                            <img\n                              src={user?.photoURL}\n                              className='img-fluid avatar avatar-md-sm rounded-circle shadow'\n                              alt='img'\n                            />\n                          </Link>\n\n                          <span\n                            className={\n                              post?.author === userEmail\n                                ? 'badge bg-success my-2'\n                                : 'badge bg-warning my-2'\n                            }\n                          >\n                            {post?.author === userEmail ? 'Author' : 'User'}\n                          </span>\n                        </div>\n                        <div className='flex-1 commentor-detail'>\n                          <h6 className='mb-0'>\n                            <Link to={`/p/${user?.username}`} className='text-dark media-heading'>\n                              {user?.username}\n                            </Link>\n                          </h6>\n                          {createdAt && moment(createdAt).fromNow()}\n                        </div>\n                      </div>\n                    </div>\n                    <p className='fw-bold px-3 rounded'>\n                      <ReactMarkdown components={components} children={comment} />\n                    </p>\n                  </li>\n                )\n              })}\n          </ul>\n        </main>\n        <Footer />\n      </>\n    )\n  }\n}\n\nexport default SinglePost\n","import React, { useContext, useEffect } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\n// components\n// pages\nimport { Home, NotFound, Profile } from './pages'\n\n// auth pages\nimport Login from './pages/auth/Login'\nimport SignUp from './pages/auth/SignUp'\nimport ForgotPassword from './pages/auth/ForgotPassword'\nimport Portfolio from './pages/Portfolio'\n\n// private route\nimport PrivateRoute from './routes/PrivateRoute'\nimport ChatRoom from './pages/ChatRoom'\nimport { AuthContext } from './context/authContext'\nimport { db } from './firebase'\nimport vis from 'ifvisible.js'\nimport PostList from './pages/forum/PostList'\nimport CreatePost from './pages/forum/CreatePost'\nimport SinglePost from './pages/forum/SinglePost'\n\nexport const App = () => {\n  const { currentUser } = useContext(AuthContext)\n  useEffect(() => {\n    if (!currentUser) return\n\n    const docRef = db.collection('users').doc(currentUser.email)\n\n    vis.on('idle', () => {\n      return docRef.update({\n        online: 'BUSY',\n      })\n    })\n\n    vis.on('wakeup', () => {\n      return docRef.update({\n        online: 'ONLINE',\n      })\n    })\n    vis.setIdleDuration(240)\n  }, [currentUser])\n\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route path='/log-in' component={Login} />\n          <Route path='/sign-up' component={SignUp} />\n          <Route path='/forgot-password' component={ForgotPassword} />\n          <PrivateRoute path='/profile' component={Profile} />\n          <PrivateRoute path='/chat-room' component={ChatRoom} />\n          <Route path='/p/:username' component={Portfolio} />\n\n          <Route exact path='/posts' component={PostList} />\n          <PrivateRoute path='/posts/create' component={CreatePost} />\n          <Route path='/post/:postId' component={SinglePost} />\n\n          <Route path='*' component={NotFound} />\n        </Switch>\n      </Router>\n    </>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { AuthProvider } from './context/authContext'\nimport { ChatProvider } from './context/chatContext'\nimport { PortfolioProvider } from './context/context'\nimport { ForumProvider } from './context/forumContext'\n\nimport { App } from './App'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './style.css'\n// import './style-dark.css'\nimport './index.css'\n\nconst root = document.getElementById('root')\n\nReactDOM.render(\n  <AuthProvider>\n    <PortfolioProvider>\n      <ForumProvider>\n        <ChatProvider>\n          <App />\n        </ChatProvider>\n      </ForumProvider>\n    </PortfolioProvider>\n  </AuthProvider>,\n  root\n)\n"],"sourceRoot":""}